# art-cli Ash Ra Template CLI Library

<%
(def clojure-versions  (get vivid-art-facts 'clojure-versions))
%>

[![License](https://img.shields.io/badge/license-Apache%202-blue.svg?style=flat-square)](LICENSE.txt)
[![Current version](https://img.shields.io/clojars/v/net.vivid-inc/art-cli.svg?color=blue&style=flat-square)](https://clojars.org/net.vivid-inc/art-cli)

`art-cli` aggregates code common to the translation and processing of [Ash Ra Template](https://github.com/vivid-inc/ash-ra-template) build tool and command line arguments into parameters for ART's Clojure API.

_This API is in flux; please don't expect to be able to rely on a stable API until the 1.0 release._

- [Rendering and options](#rendering-and-options)
    - [External ``:dependencies``](#dependencies)

<a name="rendering-and-options"></a>
## Rendering and options

`art-cli` adds additional processing capability to `vivid.art/render` to handle rendering options in support of CLI tooling.

<a name="dependencies"></a>
### External ``:dependencies``
`art-cli` provides the `vivid.art/render` rendering option `:dependencies`.
In addition to the dependencies configured in the runtime, this option allows you to specify your own set of dependencies for the template evaluation environment.

Given a template that ``require``s namespaces from external dependencies in Clojure, such as:
```clojure
<(
(require '[hiccup.core])

(def ^:const toc-headings [{:id 739 :text "Move wing assembly into place"}
                           {:id 740 :text "Connect fuel lines and hydraulics"}
                           {:id 741 :text "Attach wing assembly to fuselage"}])

(defn toc-entry [heading]
  (hiccup.core/html [:li
    [:a#link
      {:href (str "#" (heading :id))}
      (heading :text)]]))
)>
<(= (apply str (map toc-entry toc-headings)) )>
```
The template's external dependencies can be specified as a Clojure deps [lib map](https://clojure.org/reference/deps_and_cli) with `:dependencies` in the option map argument:
```clojure
(vivid.art/render template
                  :dependencies {'hiccup {:mvn/version "1.0.5"}})
```
Dependencies are resolved prior to template rendering using Clojure's ``org.clojure/tools.deps.alpha``.

As an implicit dependency, the template execution environment provides ART's minimum supported version of Clojure, version <%= (first clojure-versions) %>, but this can be overridden using the same mechanism by supplying the `org.clojure/clojure` dependency with a different version:
```clojure
                  :dependencies {'org.clojure/clojure {:mvn/version "<%= (last clojure-versions) %>"}}
```
