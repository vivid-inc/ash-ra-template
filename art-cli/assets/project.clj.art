; Copyright 2021 Vivid Inc.
<%

(require
  '[clojure.edn :as edn]
  '[clojure.java.io :as io]
  '[clojure.pprint]
  '[zprint.core])
(import
  '(java.io BufferedReader PushbackReader StringReader))

(def ^:const vivid-art-facts (with-open [r (io/reader "assets/vivid-art-facts.edn")]
                               (edn/read (PushbackReader. r))))

(defn indent-rest [indentation lines]
  "Indents all lines but the first by indentation number of spaces."
  (let [indent (repeat 12 " ")]
    (->> (map #(apply str (concat indent [%])) (rest lines))
         (concat [(first lines)])
         (clojure.string/join \newline))))

(defn lein-profile-name-for-clojure-version
  [clojure-version]
  (format "clojure-%s" clojure-version))

(defn test-dependency-block
  [clojure-version]
  [(keyword (lein-profile-name-for-clojure-version clojure-version))
   {:dependencies [['org.clojure/clojure clojure-version]]}])

(def ^:const clojure-version-profiles
  (into {} (for [v (get vivid-art-facts 'clojure-versions)]
             (test-dependency-block v))))

(def ^:const clojure-test-profiles-str
  (clojure.string/join ":"
                       (map #(str "+" (lein-profile-name-for-clojure-version %)) (get vivid-art-facts 'clojure-versions))))

(def ^:const profiles
  (merge
    '{:clj-kondo {:dependencies [[org.clojure/clojure "1.9.0"]
                                 [clj-kondo "RELEASE"]]}

      :dev       {:dependencies   [;; Diffs equality assertions in test failure output
                                   ;; https://github.com/pjstadig/humane-test-output
                                   [pjstadig/humane-test-output "0.11.0"]]

                  :injections     [(require 'pjstadig.humane-test-output)
                                   (pjstadig.humane-test-output/activate!)

                                   ; Keep Spec enabled in the context of development of ART,
                                   ; but not in the shipping jar.
                                   ;
                                   ; Load all namespaces in the project + Spec
                                   (require 'vivid.art)
                                   (require 'clojure.spec.test.alpha)
                                   ; Instrument everything Spec can find
                                   (clojure.spec.test.alpha/instrument)]

                  :plugins        [;; Reloads & re-runs tests on file changes
                                   ;; https://github.com/jakemcc/lein-test-refresh
                                   [com.jakemccrary/lein-test-refresh "0.24.1"]]

                  :resource-paths ["test-resources" "../examples"]

                  :test-refresh   {:quiet true}}}
    clojure-version-profiles))

%>
(defproject
  vivid/art-cli "<%=vivid-art-version%>"

  :note "THIS FILE IS AUTOMATICALLY GENERATED BY bin/gen.sh"
  :description "art-cli aggregates code common to the translation and processing of Ash Ra Template command line parameters into parameters for ART's Clojure API."
  :url "https://github.com/vivid-inc/ash-ra-template"
  :license {:distribution :repo
            :name         "Apache License 2.0"
            :url          "https://www.apache.org/licenses/LICENSE-2.0"}

  :aliases {"build"     ["do"
                         ["version"]
                         ["clean"]
                         ["eftest"]
                         ["cloverage"]
                         ["jar"]
                         ["install"]]
            "clj-kondo" ["with-profile" "clj-kondo" "run" "-m" "clj-kondo.main" "--"
                         "--lint" "src/"]
            "nvd"      ["nvd" "check"]
            "test"     ["with-profile" "<%= clojure-test-profiles-str %>" "build"]}

  :cloverage {:codecov? true
              :html?    true
              :junit?   true
              :output   "cloverage"                  ; "lein jar" destroys target/cloverage
              }

  :dependencies [[org.clojure/tools.cli "1.0.206"]
                 [vivid/art "0.6.0"]]

  :exclusions [org.clojure/clojure]

  :global-vars {*warn-on-reflection* true}

  :javac-options ["-target" "1.8"]

  :manifest {"Built-By" "vivid"}

  :min-lein-version "2.9.1"

  ; Enable this to assist with determining :excludes whenever dependencies and
  ; plugins change, then re-disable it.
  ;:pedantic? :abort

  :plugins [[lein-ancient "0.6.15"]
            [lein-cljfmt "0.7.0"]
            [lein-cloverage "1.2.2"]
            [lein-eftest "0.5.9"]
            [lein-ns-dep-graph "0.2.0-SNAPSHOT" :exclusions [org.clojure/clojure]]
            [lein-nvd "1.4.1" :exclusions [com.fasterxml.jackson.core/jackson-annotations
                                           commons-io
                                           org.apache.commons/commons-lang3
                                           org.clojure/clojure
                                           org.slf4j/jcl-over-slf4j
                                           org.slf4j/slf4j-api]]]

  :profiles <%= (let [zp (zprint.core/zprint-str profiles {:style :justified})
                      lines (line-seq (BufferedReader. (StringReader. zp)))]
                  (indent-rest 12 lines)) %>

  :repositories [["clojars" {:sign-releases false}]])
